<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

       <jdbc:initialize-database data-source="dataSource" enabled="${jdbc.database.init}">
              <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
              <jdbc:script encoding="utf-8" location="classpath:db/fillDB.sql"/>
       </jdbc:initialize-database>

       <beans profile="hsqldb">
              <context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>

              <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
                     <property name="driverClass" value="${jdbc.driver}"/>
                     <property name="url" value="${database.url}"/>
                     <property name="username" value="${database.username}"/>
                     <property name="password" value="${database.password}"/>
              </bean>
       </beans>

       <beans profile="postgres">
              <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>

              <!-- HikariCP configuration -->
              <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
                     <property name="poolName" value="springHikariCP" />
                     <property name="connectionTestQuery" value="SELECT 1" />
                     <property name="driverClassName" value="${jdbc.driver}" />
                     <property name="jdbcUrl" value="${database.url}" />
                     <property name="maximumPoolSize" value="${jdbc.maximumPoolSize}" />
                     <property name="idleTimeout" value="${jdbc.idleTimeout}" />

                     <property name="dataSourceProperties">
                            <props>
                                   <prop key="user">${database.username}</prop>
                                   <prop key="password">${database.password}</prop>
                            </props>
                     </property>
              </bean>

              <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
                     <constructor-arg ref="hikariConfig" />
              </bean>
       </beans>

       <!--<beans profile="jdbc">
              <context:component-scan base-package="edu.bionic.dao.jdbc"/>

              <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
                     <constructor-arg ref="dataSource"/>
              </bean>

              <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
                     <constructor-arg ref="dataSource"/>
              </bean>

              &lt;!&ndash; Define transaction manager &ndash;&gt;
              <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                     &lt;!&ndash; (this dependency is defined somewhere else) &ndash;&gt;
                     <property name="dataSource" ref="dataSource"/>
              </bean>

              &lt;!&ndash; enable the configuration of transactional behavior based on annotations &ndash;&gt;
              <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
       </beans>-->

       <beans profile="jpa">
              <context:component-scan base-package="edu.bionic.dao.jpa"/>

              <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
                     <property name="dataSource" ref="dataSource"/>
                     <property name="packagesToScan" value="edu.bionic.domain"/>
                     <property name="jpaVendorAdapter">
                            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
                     </property>
                     <property name="jpaProperties">
                            <props>
                                   <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->
                                   <prop key="hibernate.show_sql">true</prop>
                                   <prop key="hibernate.format_sql">true</prop>
                                   <prop key="hibernate.use_sql_comments">true</prop>
                            </props>
                     </property>
              </bean>

              <!-- Define transaction manager -->
              <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                     <property name="entityManagerFactory" ref="entityManagerFactory"/>
              </bean>

              <!-- enable the configuration of transactional behavior based on annotations -->
              <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
       </beans>

</beans>